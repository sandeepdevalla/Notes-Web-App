{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/filter-notes/filter-notes.component.ts","webpack:///src/app/filter-notes/filter-notes.component.html","webpack:///src/app/notes-api.service.ts","webpack:///src/app/notes-list/notes-list.component.ts","webpack:///src/app/notes-list/notes-list.component.html","webpack:///src/app/notes-view/notes-view.component.ts","webpack:///src/app/notes-view/notes-view.component.html","webpack:///src/app/notes/notes.component.ts","webpack:///src/app/notes/notes.component.html","webpack:///src/app/reducers/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","notesService","initNotesList","selector","templateUrl","styleUrls","AppModule","metaReducers","declarations","providers","bootstrap","FilterNotesComponent","store","notesApiService","listToggle","notesList","openList","JSON","parse","localStorage","getItem","window","screen","width","addNotes","deleteNote","emit","closeNotesList","addNewNote","NotesApiService","selectedNote","notesListSubcriber$","notes","setItem","stringify","next","unshift","title","description","timeStamp","Date","toString","data","splice","unsubscribe","providedIn","NotesListComponent","selected","getSelectedNote","subscribe","index","NotesViewComponent","event","target","value","editSelectedNote","changes","currentValue","NotesComponent","listOpen","note","reducers","production","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NotesApiService } from './notes-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  constructor(private notesService: NotesApiService) {\n    this.notesService.initNotesList();\n  }\n}\n","<app-notes></app-notes>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NotesComponent } from './notes/notes.component';\nimport { FilterNotesComponent } from './filter-notes/filter-notes.component';\nimport { NotesListComponent } from './notes-list/notes-list.component';\nimport { NotesViewComponent } from './notes-view/notes-view.component';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers, metaReducers } from './reducers';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotesComponent,\n    FilterNotesComponent,\n    NotesListComponent,\n    NotesViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { storeNote } from '../notes.actions';\nimport { NotesApiService } from '../notes-api.service';\n\n@Component({\n  selector: 'app-filter-notes',\n  templateUrl: './filter-notes.component.html',\n  styleUrls: ['./filter-notes.component.sass']\n})\nexport class FilterNotesComponent implements OnInit {\n  @Output()\n  listToggle = new EventEmitter<any>(true);\n  notesList = [];\n  openList = true;\n  constructor(private store: Store, public notesApiService: NotesApiService) {\n    this.notesList = JSON.parse(localStorage.getItem('notesList'));\n    if (window.screen.width >=375 && window.screen.width <= 768) {\n      this.openList = false;\n  }\n  }\n\n  ngOnInit(): void {\n  }\n  addNewNote() {\n    this.notesApiService.addNotes();\n  }\n  deleteNote() {\n    this.notesApiService.deleteNote();\n  }\n  closeNotesList() {\n    this.openList = !this.openList;\n    this.listToggle.emit(this.openList);\n  }\n}\n","<div class=\"filter-box\">\n    <button style=\"float: left;\" (click) = \"closeNotesList()\">{{openList ? 'Close List': 'Open List'}}</button>\n    <button (click) = \"addNewNote()\"> <b>+</b> New Notes</button>\n    <button (click) = \"deleteNote()\">Delete</button>\n</div>","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotesApiService  implements OnDestroy {\n  selectedNote = {};\n  constructor() { }\n  notesListSubcriber$ = new BehaviorSubject<any>([]);\n  initNotesList() {\n    const notes = localStorage.getItem('notesList');\n    if (!notes) {\n        localStorage.setItem('notesList', JSON.stringify([]));\n    } else {\n      this.notesListSubcriber$.next(JSON.parse(notes));\n    }\n  }\n  addNotes() {\n    const notes = JSON.parse(localStorage.getItem('notesList'));\n    notes.unshift({\n      title: \"New Note\",\n      description: \"No additional text\",\n      timeStamp: (new Date()).toString()\n    })\n    localStorage.setItem('notesList', JSON.stringify(notes));\n    this.notesListSubcriber$.next(notes);\n  }\n  editSelectedNote(data) {\n    const notes = JSON.parse(localStorage.getItem('notesList'));\n    notes[data['index']] = {...data};\n    this.notesListSubcriber$.next(notes);\n    localStorage.setItem('notesList', JSON.stringify(notes));\n  }\n  deleteNote() {\n    const notes = JSON.parse(localStorage.getItem('notesList'));\n    const selectedNote = JSON.parse(localStorage.getItem('selectedNote'));\n    notes.splice(selectedNote['index'], 1);\n    this.notesListSubcriber$.next(notes);\n    localStorage.setItem('notesList', JSON.stringify(notes));\n  }\n  ngOnDestroy() {\n    if(this.notesListSubcriber$) {\n      this.notesListSubcriber$.unsubscribe();\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { NotesApiService } from '../notes-api.service';\n\n@Component({\n  selector: 'app-notes-list',\n  templateUrl: './notes-list.component.html',\n  styleUrls: ['./notes-list.component.sass']\n})\nexport class NotesListComponent implements OnInit {\n  notes = [];\n  selected = 0;\n  @Output()\n  getSelectedNote = new EventEmitter<any>();\n  constructor(public notesApiService: NotesApiService) { \n  }\n  ngOnInit(): void {\n    this.notesApiService.notesListSubcriber$.subscribe(notes => {\n      this.notes = notes;\n      const selectedNote = localStorage.getItem('selectedNote');\n      this.getSelectedNote.emit(selectedNote ? JSON.parse(selectedNote) : {...this.notes[0], index: 0});\n    })\n  }\n  selectedNotes(index) {\n    this.selected = index;\n    let selectedNote = this.notes[index];\n    selectedNote['index'] = index;\n    this.getSelectedNote.emit(selectedNote);\n  }\n}\n","<div class=\"list-panel\" [ngClass]=\"{'note-bck': !notes.length}\">\n    <div class=\"list-item\" *ngFor=\"let item of notes; index as  i\" (click) = \"selectedNotes(i)\" [ngClass]=\"{'selected-note': i == selected}\">\n        <p>{{item.title}} {{i}} </p>\n        <p><em>{{item.timeStamp | date: 'shortTime'}}</em> &nbsp; {{item.description}}</p>\n    </div>\n</div>","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { NotesApiService } from '../notes-api.service';\n\n@Component({\n  selector: 'app-notes-view',\n  templateUrl: './notes-view.component.html',\n  styleUrls: ['./notes-view.component.sass']\n})\nexport class NotesViewComponent implements OnInit , OnChanges{\n  @Input()\n  selectedNote = {description: ''};\n  constructor(public notesApiService: NotesApiService) { }\n\n  ngOnInit(): void {\n  }\n  editSelectedNote(event) {\n    this.selectedNote['description'] = event.target.value;\n    this.notesApiService.editSelectedNote(this.selectedNote);\n  }\n  ngOnChanges(changes) {\n    if (changes.selectedNote) {      \n      this.selectedNote = changes.selectedNote.currentValue;\n    }\n  }\n}\n","<div class=\"view-panel\">\n    <div *ngIf =\"selectedNote.description == undefined\"> You can save notes by creating new notes</div>\n    <textarea  *ngIf =\"selectedNote.description\" name=\"notes\" id=\"notes\" cols=\"30\" rows=\"10\" (input) =\"editSelectedNote($event)\" [value] = \"selectedNote.description\"> {{selectedNote.description}}</textarea>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NotesApiService } from '../notes-api.service';\n\n@Component({\n  selector: 'app-notes',\n  templateUrl: './notes.component.html',\n  styleUrls: ['./notes.component.sass']\n})\nexport class NotesComponent implements OnInit {\n  listOpen = true;\n  selectedNote = {};\n  constructor(public notesApiService: NotesApiService) {\n    if (window.screen.width >=375 && window.screen.width <= 768) {\n        this.listOpen = false;\n    }\n  }\n  \n  ngOnInit(): void {\n  }\n  listToggle(value) {\n    this.listOpen = value;\n  }\n  getSelectedNote(note) {\n    this.selectedNote = note;\n    localStorage.setItem('selectedNote', JSON.stringify(note))\n  }\n}\n","<app-filter-notes (listToggle)=\"listToggle($event)\"></app-filter-notes>\n<div style=\"display: flex;\">\n    <app-notes-list (getSelectedNote) = \"getSelectedNote($event)\"  [ngClass]=\"listOpen ? 'open-list' : 'close-list'\"></app-notes-list>\n    <app-notes-view [selectedNote] = \"selectedNote\"></app-notes-view>\n</div>","import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\n\nexport interface State {\n}\n\nexport const reducers: ActionReducerMap<State> = {\n\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}